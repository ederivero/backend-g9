// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Producto {
  id             Int     @id @default(autoincrement())
  nombre         String  @db.VarChar(50)
  precio         Float
  disponibilidad Boolean @default(true)
  cantidad       Int     @default(10)

  detalles DetallePedido[]

  // Asi se cambia el nombre de la tabla en la base de datos
  @@map("productos")
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(50)
  // Al poner el simbolo de interrogacion en el tipo de dato estamos indicando que esa columna puede admitir valores nulos
  apellido  String?  @db.VarChar(50)
  dni       String   @unique @db.VarChar(8)
  correo    String
  createdAt DateTime @default(now()) @map("created_at") // si queremos que la base de datos ponga la hora y fecha actual

  // Ahora relaciono la tabla clientes con la tabla cabecera_pedidos
  cabeceraPedidos CabeceraPedido[]

  @@map("clientes")
}

model CabeceraPedido {
  id           Int             @id @default(autoincrement())
  clienteId    Int             @map("cliente_id")
  fechaEmision DateTime        @map("fecha_emision")
  // Ahora creo las relaciones
  cliente      Cliente         @relation(fields: [clienteId], references: [id])
  detalles     DetallePedido[]

  @@map("cabecera_pedidos")
}

model DetallePedido {
  id         Int   @id @default(autoincrement())
  productoId Int   @map("producto_id")
  cantidad   Int
  valorVenta Float @map("valor_venta")
  pedidoId   Int   @map("pedido_id")

  producto Producto       @relation(fields: [productoId], references: [id])
  pedido   CabeceraPedido @relation(fields: [pedidoId], references: [id])

  @@map("detalle_pedidos")
}
